# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

opt_out_usage

default_platform(:ios)

platform :ios do
  desc "Build for development without publishing"
  lane :build do
    build_app(
      workspace: "OpenCoder.xcworkspace", 
      scheme: "OpenCoder",
      configuration: "Debug",
      skip_codesigning: true,
      skip_archive: true,
      destination: "generic/platform=iOS Simulator",
      skip_package_dependencies_resolution: true,
      disable_package_automatic_updates: true,
      buildlog_path: "/tmp/gym_logs",
      silent: true
    )
    puts "‚úÖ Development build completed successfully"
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    api_key = app_store_connect_api_key(
      key_id: "ZZR4FFP696",
      issuer_id: "d5f4a2be-8aae-409d-9526-b299f949a6d9",
      key_filepath: "./fastlane/AuthKey_ZZR4FFP696.p8"
    )
    get_certificates(
      development: false,
      api_key: api_key
    )
    get_provisioning_profile(
      app_identifier: "com.goniz.opencoderapp",
      adhoc: false,
      api_key: api_key
    )
    increment_build_number(xcodeproj: "OpenCoder.xcodeproj")
    build_app(
      workspace: "OpenCoder.xcworkspace", 
      scheme: "OpenCoder",
      export_method: "app-store",
      export_options: {
        signingStyle: "automatic"
      },
      xcargs: "CODE_SIGN_STYLE=Automatic",
      skip_package_dependencies_resolution: true,
      disable_package_automatic_updates: true
    )
    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true
    )
  end

  desc "Build development IPA for distribution"
  lane :adhoc do
    api_key = app_store_connect_api_key(
      key_id: "ZZR4FFP696",
      issuer_id: "d5f4a2be-8aae-409d-9526-b299f949a6d9",
      key_filepath: "./fastlane/AuthKey_ZZR4FFP696.p8"
    )

    # Ensure the correct distribution certificate and an Ad Hoc provisioning profile
    get_certificates(
      development: false,
      api_key: api_key
    )
    get_provisioning_profile(
      app_identifier: "com.goniz.opencoderapp",
      adhoc: true,
      api_key: api_key,
      force: true
    )

    increment_build_number(xcodeproj: "OpenCoder.xcodeproj")
    build_app(
      workspace: "OpenCoder.xcworkspace", 
      scheme: "OpenCoder",
      export_method: "ad-hoc",
      output_name: "OpenCoder-AdHoc",
      skip_codesigning: false,
      export_options: {
        provisioningProfiles: {
          "com.goniz.opencoderapp" => "com.goniz.opencoderapp AdHoc"
        },
        signingStyle: "manual"
      },
      xcargs: "CODE_SIGN_STYLE=Manual PROVISIONING_PROFILE_SPECIFIER='com.goniz.opencoderapp AdHoc'"
    )
    puts "‚úÖ Ad Hoc IPA created: #{lane_context[SharedValues::IPA_OUTPUT_PATH]}"
  end

  desc "Generate screenshots for development"
  lane :screenshots do
    capture_screenshots(
      workspace: "OpenCoder.xcworkspace",
      scheme: "OpenCoder",
      configuration: "Debug",
      devices: ["iPhone 16 Pro"],
      languages: ["en-US"],
      output_directory: "./screenshots"
    )
  end

  desc "Update App ID capabilities and regenerate provisioning profiles"
  lane :update_capabilities do
    api_key = app_store_connect_api_key(
      key_id: "ZZR4FFP696",
      issuer_id: "d5f4a2be-8aae-409d-9526-b299f949a6d9",
      key_filepath: "./fastlane/AuthKey_ZZR4FFP696.p8"
    )
    
    # Force regenerate all provisioning profiles
    get_provisioning_profile(
      app_identifier: "com.goniz.opencoderapp",
      adhoc: false,
      api_key: api_key,
      force: true
    )
    get_provisioning_profile(
      app_identifier: "com.goniz.opencoderapp",
      adhoc: true,
      api_key: api_key,
      force: true
    )
    puts "‚úÖ Provisioning profiles updated with new capabilities"
  end

  desc "Check TestFlight build processing status"
  lane :check_builds do
    api_key = app_store_connect_api_key(
      key_id: "ZZR4FFP696",
      issuer_id: "d5f4a2be-8aae-409d-9526-b299f949a6d9",
      key_filepath: "./fastlane/AuthKey_ZZR4FFP696.p8"
    )
    
    # Get latest builds from TestFlight
    builds = latest_testflight_build_number(
      api_key: api_key,
      app_identifier: "com.goniz.opencoderapp",
      initial_build_number: 1
    )
    
    puts "üîç Latest TestFlight build: #{builds}"
    puts "üì± Local build number: #{get_build_number(xcodeproj: 'OpenCoder.xcodeproj')}"
  end
end
